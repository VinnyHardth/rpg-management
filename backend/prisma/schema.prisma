// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UserType {
  id    String @id @default(uuid()) @db.Char(40)
  label String @unique @db.VarChar(10)
  User  User[]

  @@map("user_types")
}

model User {
  id       String @id @default(uuid()) @db.Char(40)
  email    String @unique @db.VarChar(150)
  username String @unique @db.VarChar(30)
  password String @db.VarChar(60)

  user_type  UserType @relation(fields: [userTypeId], references: [id])
  userTypeId String

  created_at DateTime @default(now()) @db.DateTime(6)
  updated_at DateTime @default(now()) @db.DateTime(6)

  UserInCampaign UserInCampaign[]

  @@map("users")
}

model UserInCampaign {
  id         String      @id @default(uuid()) @db.Char(40)
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @unique @map("user_id")
  campaign   Campaign    @relation(fields: [campaignId], references: [id])
  campaignId String      @map("campaign_id")
  Character  Character[]

  @@map("user_in_campaigns")
}

model Campaign {
  id          String  @id @default(uuid()) @db.Char(40)
  name        String  @unique @db.VarChar(255)
  description String? @db.Text

  RpgSystem   RpgSystem? @relation(fields: [rpgSystemId], references: [id])
  rpgSystemId String?    @db.Char(40)

  UserInCampaign UserInCampaign[]

  created_at DateTime @default(now()) @db.DateTime(6)
  updated_at DateTime @default(now()) @db.DateTime(6)

  @@map("campaigns")
}

model RpgSystem {
  id   String @id @default(uuid()) @db.Char(40)
  name String @unique @db.VarChar(100)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  campaign     Campaign[]
  systemStatus StatusFromRpgSystem[]

  @@map("rpg_systems")
}

model StatusFromRpgSystem {
  id String @id @default(uuid()) @db.Char(36)

  PrimaryStatus   PrimaryStatus[]
  SecondaryStatus SecondaryStatus[]

  Status   Status @relation(fields: [statusId], references: [id])
  statusId String @unique @db.Char(36)

  RpgSystem   RpgSystem @relation(fields: [rpgSystemId], references: [id])
  rpgSystemId String    @db.Char(40)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("status_from_rpg_system")
}

model Status {
  id   String @id @default(uuid()) @db.Char(36)
  name String @unique @db.VarChar(100)

  statusFromRpgSystem StatusFromRpgSystem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("status")
}

model PrimaryStatus {
  id    String @id @default(uuid()) @db.Char(36)
  name  String @unique @db.VarChar(100)
  value Int    @default(0) @db.SmallInt

  systemStatus   StatusFromRpgSystem @relation(fields: [systemStatusId], references: [id])
  systemStatusId String              @map("system_status_id") @db.Char(36)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("primary_status")
}

model SecondaryStatus {
  id    String @id @default(uuid()) @db.Char(36)
  name  String @unique @db.VarChar(100)
  value Int    @default(0) @db.SmallInt

  systemStatus   StatusFromRpgSystem? @relation(fields: [systemStatusId], references: [id])
  systemStatusId String?              @map("system_status_id") @db.Char(36)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("secondary_status")
}

model Character {
  id          String  @id @default(uuid()) @db.Char(40)
  name        String  @db.VarChar(100)
  description String? @db.Text

  UserInCampaign   UserInCampaign @relation(fields: [userInCampaignId], references: [id])
  userInCampaignId String         @map("user_in_campaign_id") @db.Char(40)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("characters")
}

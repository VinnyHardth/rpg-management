// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid()) @db.Char(40)
  email      String      @unique @db.VarChar(150)
  username   String      @unique @db.VarChar(30)
  password   String      @db.VarChar(60)
  user_type  UserType    @relation(fields: [userTypeId], references: [id])
  userTypeId String      @map("user_type_id")
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  Campaign   Campaign[]
  Character  Character[]

  @@map("users")
}

model UserType {
  id    String @id @default(uuid()) @db.Char(40)
  label String @unique @db.VarChar(10)
  User  User[]

  @@map("user_types")
}

model RpgSystem {
  id        String     @id @default(uuid()) @db.Char(40)
  name      String     @unique @db.VarChar(100)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  Campaign  Campaign[]

  @@map("rpg_systems")
}

model StatusFromRpgSystem {
  id   String @id @default(uuid()) @db.Char(36)
  name String @unique @db.VarChar(100)

  PrimaryStatus   PrimaryStatus[]
  SecondaryStatus SecondaryStatus[]

  Status   Status @relation(fields: [statusId], references: [id])
  statusId String @db.Char(36)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("status_from_rpg_system")
}

model Campaign {
  id          String      @id @default(uuid()) @db.Char(36)
  name        String      @unique @db.VarChar(100)
  description String?     @db.Text
  user        User        @relation(fields: [userId], references: [id])
  userId      String      @map("user_id")
  rpgSystem   RpgSystem   @relation(fields: [rpgSystemId], references: [id])
  rpgSystemId String      @map("rpg_system_id")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  Character   Character[]

  @@map("campaigns")
}

model Character {
  id         String   @id @default(uuid()) @db.Char(36)
  name       String   @db.VarChar(100)
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId String   @map("campaign_id")
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @map("user_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("characters")
}

model Status {
  id   String @id @default(uuid()) @db.Char(36)
  name String @unique @db.VarChar(100)

  statusFromRpgSystem StatusFromRpgSystem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("status")
}

model PrimaryStatus {
  id             String              @id @default(uuid()) @db.Char(36)
  name           String              @unique @db.VarChar(100)
  value          Int                 @default(0) @db.SmallInt
  systemStatus   StatusFromRpgSystem @relation(fields: [systemStatusId], references: [id])
  systemStatusId String              @map("system_status_id")
  createdAt      DateTime            @default(now()) @map("created_at")
  updatedAt      DateTime            @updatedAt @map("updated_at")

  @@map("primary_status")
}

model SecondaryStatus {
  id             String               @id @default(uuid()) @db.Char(36)
  name           String               @unique @db.VarChar(100)
  value          Int                  @default(0) @db.SmallInt
  systemStatus   StatusFromRpgSystem? @relation(fields: [systemStatusId], references: [id])
  systemStatusId String?              @map("system_status_id") @db.Char(36)
  createdAt      DateTime             @default(now()) @map("created_at")
  updatedAt      DateTime             @updatedAt @map("updated_at")

  @@map("secondary_status")
}
